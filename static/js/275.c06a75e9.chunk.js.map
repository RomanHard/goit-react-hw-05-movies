{"version":3,"file":"static/js/275.c06a75e9.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAASM,IAAT,iBAAuBI,IADlB,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDASjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,4HChBrB,EAhBsB,SAAC,GAAgD,EAA9CS,aAA8C,EAAhCC,gBAAiC,IAAhBC,EAAe,EAAfA,SAQtD,OACE,kBAAMA,SARa,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfJ,EAASG,EAAKE,SAASZ,QAAQa,OAC/BH,EAAKI,OACN,EAGC,WACE,kBAAOC,KAAK,OAAOC,KAAK,aACxB,mBAAQD,KAAK,SAAb,sBAGL,EC4BH,EAlCmB,WACjB,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOjB,EAAP,KAAqBC,EAArB,KACMN,EAAUK,EAAaX,IAAI,YAEjC6B,EAAAA,EAAAA,YAAU,WACQ,KAAZvB,GAA8B,OAAZA,IAItBD,EAAAA,EAAAA,IAAkBC,GAASwB,KAAKL,EACjC,GAAE,CAACnB,IAMJ,OACE,iCACE,SAAC,EAAD,CAAiBK,aAAcA,EAAcC,gBAAiBA,EAAiBC,SAN9D,SAACP,GACpBM,EAAgB,CAAEN,QAAAA,GACnB,KAKG,wBACGkB,EAAOO,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAM5B,IAAM8B,MAAO,CAAEC,KAAMT,GAAhD,SACGM,EAAMI,SAFFJ,EAAM5B,GADA,QAUxB,C","sources":["components/shared/services/moviesAPI.js","pages/MovieSearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c34d624783ee48c11b5d0b51da30f0d1',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","\nconst MovieSearchForm = ({ searchParams, setSearchParams, onSubmit }) => {\n    const handleSubmit = e => {\n      e.preventDefault();\n      const form = e.currentTarget;\n      onSubmit(form.elements.keyword.value);\n      form.reset();\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"keyword\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  };\n  \n  export default MovieSearchForm;\n  ","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { fetchMovieByQuery } from 'components/shared/services/moviesAPI';\nimport MovieSearchForm from './MovieSearchForm';\nimport { useSearchParams } from 'react-router-dom';\n\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyword = searchParams.get('keyword');\n\n  useEffect(() => {\n    if (keyword === '' || keyword === null) {\n      return;\n    }\n\n    fetchMovieByQuery(keyword).then(setMovies);\n  }, [keyword]);\n\n  const handleSearch = (keyword) => {\n    setSearchParams({ keyword });\n  };\n\n  return (\n    <>\n      <MovieSearchForm searchParams={searchParams} setSearchParams={setSearchParams} onSubmit={handleSearch} />\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","searchParams","setSearchParams","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","useState","movies","setMovies","location","useLocation","useSearchParams","useEffect","then","map","movie","to","state","from","title"],"sourceRoot":""}