{"version":3,"file":"static/js/671.f5b8b6c1.chunk.js","mappings":"wMAmBIA,EAAS,WAGX,IAH0B,IAAdC,EAAc,uDAAP,GACfC,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWL,IAC3CA,KAAQ,CACb,IAAIM,EAAqB,GAAdJ,EAAMF,GAEfC,GADEK,EAAO,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAET,CACD,OAAOL,CACR,ECpBD,EAbgB,CACd,CACEA,GAAIF,IACJU,KAAM,OACNC,KAAM,KAER,CACET,GAAIF,IACJU,KAAM,SACNC,KAAM,WCVV,EAAuB,qBAAvB,EAAqD,uB,SCIxCC,EAAS,WACpB,IAAMC,EAAWC,EAAAA,KAAY,gBAAGZ,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OAC3B,yBACE,SAAC,KAAD,CAASI,UAAWC,EAAeC,GAAIN,EAAvC,SACGD,KAFIR,EADkB,IAQ7B,OAAO,eAAIa,UAAWC,EAAf,SAA6BH,GACrC,ECCD,EAbe,WACb,OACE,iCACE,6BACE,SAACD,EAAD,OAEF,2BACE,SAAC,KAAD,QAIP,C","sources":["../node_modules/nanoid/index.browser.js","components/Navbar/options.js","webpack://goit-react-hw-05-movies/./src/components/Navbar/Navbar.module.css?9379","components/Navbar/Navbar.jsx","components/Layout/Layout.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from 'nanoid';\n\nconst options = [\n  {\n    id: nanoid(),\n    text: 'Home',\n    link: '/',\n  },\n  {\n    id: nanoid(),\n    text: 'Movies',\n    link: 'movies',\n  },\n];\n\nexport default options;\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"Navbar_menu__RhlpJ\",\"option\":\"Navbar_option__lI1Bk\"};","import { NavLink } from 'react-router-dom';\n\nimport options from './options';\nimport styles from './Navbar.module.css';\n\nexport const Navbar = () => {\n  const elements = options.map(({ id, text, link }) => (\n    <li key={id}>\n      <NavLink className={styles.option} to={link}>\n        {text}\n      </NavLink>\n    </li>\n  ));\n\n  return <ul className={styles.menu}>{elements}</ul>;\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from 'components/Navbar/Navbar';\n\nconst Layout = () => {\n  return (\n    <>\n      <header>\n        <Navbar />\n      </header>\n      <main>\n        <Outlet />\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n"],"names":["nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","text","link","Navbar","elements","options","className","styles","to"],"sourceRoot":""}